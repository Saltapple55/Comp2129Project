using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace FlightProject2129
{

    class UtilityClass
    {

        // save the customers at the proper location
        public static void saveCustomers(string location, Customer[] customer, int num)
        {
            // if file exists at this location do not 
            //if (File.Exists(location))
            //{
            using StreamWriter sw = new StreamWriter(location);
            sw.WriteLine(num);
            for (int i = 0; i < num; i++)
            {

                
                // this would get the first name and last name and phone number 
                sw.WriteLine(customer[i].FirstName + " " + customer[i].LastName + " " + customer[i].PhoneNum + "\n");

            }
            sw.Close();

            if (sw.BaseStream != null)
            {
                Console.WriteLine($"Customers Text saved successfully to {location}");
            }
            else
            {
                Console.WriteLine($"Could not save customers text to {location}");
            }
        }

        // save the flights at the proper location
        public static void saveFlights(string location, Flight[] flight, int num)
        {
            // if (File.Exists(location))
            //{
            using StreamWriter sw = new StreamWriter(location);
            sw.WriteLine(num);
            for (int i = 0; i < num; i++)
            {
                // getting all the flight info
                sw.WriteLine(flight[i].NumPassengers + " " +  flight[i].FlightNum + " " +  flight[i].FlightDest + " " + flight[i].FlightOrigin + "\n");

            }
            sw.Close();
            Console.WriteLine("Flights Text saved successfuly");

            if (sw.BaseStream != null)
            {
                Console.WriteLine($"Flights Text saved successfully to {location}");
            }
            else
            {
                Console.WriteLine($"Could not save flights text to {location}");
            }
        }


        public static void saveBookings(string location, Booking[] booking, int num)
        {
            
            using StreamWriter sw = new StreamWriter(location);
            sw.WriteLine(num);
            for (int i = 0; i < num; i++)
            {
                // getting all the flight info
                sw.WriteLine(booking[i].BookingNum + " " + booking[i].BookingDate + " " + booking[i].Customer + " " + booking[i].Flight + "\n");

            

            }
            sw.Close();
            Console.WriteLine("Booking Text saved successfully");

            if (sw.BaseStream != null)
            {
                Console.WriteLine($"Booking Text saved successfully to {location}");
            }
            else
            {
                Console.WriteLine($"Could not save booking text to {location}");
            }
        }

        // this loads all the customer information including booking data and flights 
        public static Customer[] loadCustomer(string location)
        {
            Console.WriteLine("Customer Loading");
            int num;
            Customer[] CustTemp;
            Booking[] bookTemp;
            Flight[] Flighttemp;
            string line;
            bool done = false;
            if (File.Exists(location))
            {
                Console.WriteLine("File opened");
                using StreamReader customerFile = new StreamReader(location);
                int numCustomers = Convert.ToInt32(customerFile.ReadLine());
                Console.WriteLine("Customers found: " + numCustomers);
                CustTemp = new Customer[numCustomers + 10];
                bookTemp = new Booking[numCustomers + 10];
                Flighttemp = new Flight[numCustomers + 10];
                for (int i = 0; i < numCustomers; i++)
                {
                    line = customerFile.ReadLine();
                    string[] parts = line.Split();
                    Console.WriteLine("booking data: " + parts[0] + " " +  parts[1] + " " + parts[2] + " " + parts[3]);
                    bookTemp[i] = new Booking(Convert.ToInt32(parts[0]), parts[1] + parts[2] + parts[3]);
                    Console.WriteLine("customer data: " + parts[4] + " " + parts[5] + " " + parts[6]);
                    CustTemp[i] = new Customer(parts[4], parts[5], parts[6]);

                    Console.WriteLine("flight data: " + parts[7] + " " + parts[8] + " " + parts[9] + " " + parts[10]);
                    Flighttemp[i] = new Flight(Convert.ToInt32(parts[7]), parts[8], parts[9], Convert.ToInt32(parts[10]));
                    
                }
                customerFile.Close();

            }
            else
            {
                CustTemp = new Customer[10];
                Console.WriteLine("File not found");
            }
            return CustTemp;
        } 



    }
}
